<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				width="500">
	
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
			
			import org.bigbluebutton.model.chat.ChatMessage;	
			
			override public function set data(obj:Object):void {
				super.data = obj;
				
				var m:ChatMessage = obj as ChatMessage;
				
				if (m) {
					username.text = m.name;
					time.text = m.time	
					
					if (!isHTMLString(m.senderText))
					{
						message.text = m.senderText;
					}
					else
					{
						message.textFlow = TextConverter.importToFlow(m.senderText, TextConverter.TEXT_FIELD_HTML_FORMAT);
					}
					
					//TODO: What is translatedText, where should it be used?	
					//removeUnneededInformationFromDisplay(m);
				}
			}
			
			/**
			 * Checks if message string contains opening and closing HTML tag e.g. <....> 
			 **/
			public function isHTMLString(str:String):Boolean
			{
				var pattern:RegExp = new RegExp("(\<+.*\>+)");
				var result:Object = pattern.exec(str);
				
				if(result == null) {
					return false;
				}
				return true;
			}
			
			private function removeUnneededInformationFromDisplay(m:ChatMessage):void
			{
				var sameUser:Boolean = (m.lastSenderId == m.senderId);
				var sameTime:Boolean = (m.lastTime == m.time);
				
				if(sameUser && sameTime)
				{
					nameTimeGroup.includeInLayout = false;						
				}
				else if(sameUser)
				{
					username.visible = false;
				}
				else if(sameTime)
				{
					time.visible = false;
				}
			}
			
		]]>
	</fx:Script>
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<s:states>
		<s:State name="others_state"/>
		<s:State name="me_state"/>
	</s:states>
	<s:Group id="nameTimeGroup" width="100%">
		<s:Label id="username"  left="0" width="50%"  color="#9E9E9E" 
				 textAlign="left" left.me_state="" right.me_state="0" textAlign.me_state="right"/>
		<s:Label id="time"  right="0" width="50%" color="#9E9E9E" 
				  textAlign="right" left.me_state="0" right.me_state="" textAlign.me_state="left"/>
	</s:Group>
	<s:Group width="100%">
		<s:RichEditableText editable="false" selectable="false" id="message" width="100%" textAlign="left"/>
	</s:Group>
</s:ItemRenderer>